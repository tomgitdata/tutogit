clonar el repositorio remoto (sera llamado origin, mientras que el local es siempre master:)
$ git clone git://github.com/schacon/ticgit.git


######
iniciamos un repositorio en remoto (github), con el boton http nos copiara la direccion del repositorio al portapapeles. 
En nuestra terminal local y dentro de nuestr directorio de trabajo (hello-word) que inicializamos como repositorio git, le indicamos a git la localizacion de la version remota. Normalmente se llamara origin.

$ git remote add <nombre|origin> <url|loquesalgadelpaste>
ahora el repo local sabe donde enviar cuando hagamos push o pull

ver todos los remotos:
$git remote -v

Si tienes más de un remoto, este comando los lista todos. Por ejemplo:

$ git remote -v
bakkdoor  git://github.com/bakkdoor/grit.git
cho45     git://github.com/cho45/grit.git
defunkt   git://github.com/defunkt/grit.git
koke      git://github.com/koke/grit.git
origin  https://github.com/tomgitdata/tutogit.git (fetch)
origin  https://github.com/tomgitdata/tutogit.git (push)

Esto significa que podemos recibir contribuciones de cualquiera de estos usuarios de manera bastante fácil. Pero fíjate en que sólo el remoto origen tiene una URL SSL, por lo que es el único al que podemos enviar

Si queremos borrar el direccionamiento a un repositorio remoto:
 $git remote delete <nombre>

Para descargar la informacion de un repositorio remoto que no tengamos en el local podemos usar el nombre en vez de toda URL. Por ejemplo, si quieres recuperar toda la información de Koke que todavía no tienes en tu repositorio, puedes ejecutar git fetch koke:

*** añadido hoy


Es importante tener en cuenta que el comando fetch sólo recupera la información y la pone en tu repositorio local —no la une automáticamente con tu trabajo ni modifica aquello en lo que estás trabajando. Tendrás que unir ambos manualmente a posteriori.
